omg: 1
info:
  version: 1.0.0
  title: Twitter
  description: Twitter as a microservice
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: Asyncy
    url: https://asyncy.com
    email: hello@asyncy.com
actions:
  # https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create.html
  follow:
    help: Follow an user
    arguments:
      handle:
        type: string
        help: The screen name of the user to follow.
      user:
        type: int
        help: The ID of the user to follow.
      follow:
        type: boolean
        help: Enable notifications for the target user.
    output:
      type: map
      help: The user object who was followed

  # https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy
  unfollow:
    help: Unfollow an user
    arguments:
      handle:
        type: string
        help: The screen name of the user to unfollow.
      user:
        type: int
        help: The ID of the user to unfollow.
    output:
      type: map
      help: The user object who was unfollowed

  # https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-list
  followers:
    help: |
      Returns a cursored collection of user objects for users following the specified user.

      At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple “pages” of results can be navigated through using the `next_cursor` value in subsequent requests.
    arguments:
      handle:
        type: string
        help: The screen name of the user for whom to return results.
      user:
        type: int
        help: The ID of the user for whom to return results.
      cursor:
        type: int
        help: Causes the results to be broken into pages. If no cursor is provided, a value of -1 will be assumed, which is the first “page.”
        range:
          min: -1
      count:
        type: int
        help: The number of users to return per page, up to a maximum of 200. Defaults to 20.
        range:
          min: 1
          max: 200
      skip_status:
        type: boolean
        help: When set to either true, statuses will not be included in the returned user objects. If set to any other value, statuses will be included.
    output:
      type: map

  retweet:
    help: Retweet a tweet
    arguments:
      tweet:
        type: int
        required: true
    output:
      type: map

  tweet:
    help: Tweet a message
    arguments:
      status:
        type: string
        required: true
    output:
      type: map

  stream:
    help: Stream tweets
    events:
      tweet:
        arguments:
          hashtag:
            type: string
            help: Filter tweets that container this hashtag
            required: true
    run:
      command: ["node", "/app.js", "stream"]
    output:
      type: map

environment:
  consumer_key:
    type: string
  consumer_secret:
    type: string
  access_token:
    type: string
  access_token_secret:
    type: string
